# Generated by Django 4.2.13 on 2024-11-11 10:54

import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion
import fontawesome_5.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AgendaGoals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('goal', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AnnualPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annual_target', models.FloatField(blank=True, null=True)),
                ('annual_performance', models.FloatField(blank=True, null=True)),
                ('annual_date', models.DateTimeField(auto_now_add=True)),
                ('target_state', models.CharField(choices=[('cum', 'Cumulative'), ('net', 'Net')], max_length=20, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('scorecard', colorfield.fields.ColorField(blank=True, default='#FF0000', image_field=None, max_length=25, null=True, samples=None)),
            ],
        ),
        migrations.CreateModel(
            name='AnnualPlan2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kpi_name_eng', models.CharField(max_length=400, null=True)),
                ('sub_kpi_name_eng', models.CharField(blank=True, max_length=400, null=True)),
                ('target_state', models.CharField(choices=[('cum', 'Cumulative'), ('net', 'Net')], max_length=20)),
                ('plan_year_2012', models.FloatField(blank=True, null=True)),
                ('performance_year_2012', models.FloatField(blank=True, null=True)),
                ('plan_year_2013', models.FloatField(blank=True, null=True)),
                ('performance_year_2013', models.FloatField(blank=True, null=True)),
                ('plan_year_2014', models.FloatField(blank=True, null=True)),
                ('performance_year_2014', models.FloatField(blank=True, null=True)),
                ('plan_year_2015', models.FloatField(blank=True, null=True)),
                ('performance_year_2015', models.FloatField(blank=True, null=True)),
                ('plan_year_2016', models.FloatField(blank=True, null=True)),
                ('plan_year_2017', models.FloatField(blank=True, null=True)),
                ('plan_year_2018', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnnualQuarter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('performance_2015', models.FloatField(blank=True, null=True)),
                ('target_2016', models.FloatField(blank=True, null=True)),
                ('target_2017', models.FloatField(blank=True, null=True)),
                ('target_2018', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_eng', models.CharField(max_length=200)),
                ('name_amh', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='DashboardCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_eng', models.CharField(max_length=200)),
                ('name_amh', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='DashboardSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('performance', models.BooleanField(blank=True, default=False, null=True)),
                ('target', models.BooleanField(blank=True, default=False, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('is_score_card', models.BooleanField(blank=True, default=False, null=True)),
            ],
            options={
                'ordering': ['rank'],
            },
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kpi_name_eng', models.CharField(max_length=400)),
                ('kpi_code', models.CharField(blank=True, max_length=400, null=True)),
                ('kpi_name_amh', models.CharField(blank=True, max_length=400)),
                ('kpi_weight', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('kpi_measurement_units', models.CharField(blank=True, max_length=50, null=True)),
                ('kpi_characteristics', models.CharField(choices=[('inc', 'Increasing'), ('dec', 'Decreasing'), ('const', 'Constant')], default='inc', max_length=10)),
                ('kpi_is_visable', models.BooleanField(blank=True, default=False, null=True)),
            ],
            options={
                'verbose_name': 'Key Performance Indicator',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='IndicatorMetaData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kpi_description_eng', models.TextField()),
                ('kpi_description_amh', models.TextField()),
                ('source', models.CharField(max_length=100)),
                ('base_value', models.FloatField(blank=True, null=True)),
                ('calculation_method', models.TextField()),
                ('interpretation', models.TextField()),
                ('units_of_measurement', models.CharField(max_length=50)),
                ('frequency_of_update', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('biannual', 'Biannual'), ('yearly', 'Yearly')], max_length=20)),
                ('data_quality_and_validity', models.TextField()),
                ('references', models.URLField()),
            ],
            options={
                'verbose_name': 'Key Performance Indicator Meta Data',
            },
        ),
        migrations.CreateModel(
            name='IndicatorTempo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kpi_name_eng', models.CharField(max_length=400)),
                ('kpi_name_amh', models.CharField(blank=True, max_length=400)),
                ('kpi_weight', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('kpi_measurement_units', models.CharField(max_length=50, null=True)),
                ('kpi_characteristics', models.CharField(choices=[('inc', 'Increasing'), ('dec', 'Decreasing'), ('const', 'Constant')], default='inc', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='KeyResultArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_name_eng', models.CharField(max_length=350)),
                ('activity_name_amh', models.CharField(blank=True, max_length=350)),
                ('activity_weight', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('activity_is_shared', models.BooleanField(default=False)),
                ('kra_is_visable', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='KpiAggregation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_kpi_name_eng', models.CharField(max_length=400)),
                ('sub_kpi_name_amh', models.CharField(max_length=400)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Month',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month_amh', models.CharField(max_length=100)),
                ('month_english', models.CharField(max_length=100)),
                ('month_ranked', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MonthProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month_target', models.FloatField(blank=True)),
                ('month_performance', models.FloatField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NationalPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('np_name_eng', models.CharField(blank=True, max_length=150)),
                ('np_name_amh', models.CharField(blank=True, max_length=150)),
                ('description_eng', models.TextField()),
                ('description_amh', models.TextField()),
                ('starting_date', models.DateTimeField()),
                ('ending_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceEntryDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PlanEntryDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PolicyArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policyAreaEng', models.CharField(blank=True, max_length=450)),
                ('policyAreaAmh', models.CharField(blank=True, max_length=450)),
                ('icon', fontawesome_5.fields.IconField(blank=True, max_length=60)),
                ('rank', models.IntegerField(default=400)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Quarter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quarter_eng', models.CharField(blank=True, max_length=100, null=True)),
                ('quarter_amharic', models.CharField(blank=True, max_length=100, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'ordering': ['rank'],
            },
        ),
        migrations.CreateModel(
            name='QuarterPlanTemp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quarter1_target', models.FloatField(blank=True, null=True)),
                ('quarter2_target', models.FloatField(blank=True, null=True)),
                ('quarter3_target', models.FloatField(blank=True, null=True)),
                ('quarter4_target', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuarterProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quarter_target', models.FloatField(blank=True, null=True)),
                ('quarter_performance', models.FloatField(blank=True, null=True)),
                ('quarter_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('scorecard', colorfield.fields.ColorField(blank=True, default='#FF0000', image_field=None, max_length=25, null=True, samples=None)),
            ],
        ),
        migrations.CreateModel(
            name='QuarterProgress2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kpi_name_eng', models.CharField(max_length=400, null=True)),
                ('sub_kpi_name_eng', models.CharField(blank=True, max_length=400, null=True)),
                ('target_state', models.CharField(choices=[('cum', 'Cumulative'), ('net', 'Net')], max_length=20)),
                ('plan_quarter1', models.FloatField(blank=True, null=True)),
                ('performance_quarter1', models.FloatField(blank=True, null=True)),
                ('plan_quarter2', models.FloatField(blank=True, null=True)),
                ('plan_quarter3', models.FloatField(blank=True, null=True)),
                ('plan_quarter4', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ScoreCardRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('color', colorfield.fields.ColorField(default='#FF0000', image_field=None, max_length=25, samples=None)),
                ('starting', models.DecimalField(decimal_places=2, max_digits=5)),
                ('ending', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='SDG',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(unique=True)),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['-code'],
            },
        ),
        migrations.CreateModel(
            name='SharedIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kpi_weight', models.DecimalField(blank=True, decimal_places=3, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_eng', models.IntegerField()),
                ('year_amh', models.IntegerField()),
                ('visible', models.BooleanField(default=True)),
                ('mdip', models.BooleanField(default=True)),
                ('quarter_view', models.BooleanField(default=False)),
                ('is_current_year', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['year_amh'],
            },
        ),
        migrations.CreateModel(
            name='AnnualPerformanceEntryDate',
            fields=[
                ('performanceentrydate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='resultsFramework.performanceentrydate')),
            ],
            bases=('resultsFramework.performanceentrydate',),
        ),
        migrations.CreateModel(
            name='AnnualPlanEntryDate',
            fields=[
                ('planentrydate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='resultsFramework.planentrydate')),
            ],
            bases=('resultsFramework.planentrydate',),
        ),
        migrations.CreateModel(
            name='QuarterPerformanceEntryDate',
            fields=[
                ('performanceentrydate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='resultsFramework.performanceentrydate')),
            ],
            bases=('resultsFramework.performanceentrydate',),
        ),
        migrations.CreateModel(
            name='QuarterPlanEntryDate',
            fields=[
                ('planentrydate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='resultsFramework.planentrydate')),
            ],
            bases=('resultsFramework.planentrydate',),
        ),
        migrations.CreateModel(
            name='StrategicGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal_name_eng', models.CharField(blank=True, max_length=350)),
                ('goal_name_amh', models.CharField(blank=True, max_length=350, null=True)),
                ('goal_weight', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('goal_is_shared', models.BooleanField(default=False)),
                ('goal_is_visable', models.BooleanField(default=False)),
                ('national_plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='resultsFramework.nationalplan')),
                ('policy_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='policy_area_goal', to='resultsFramework.policyarea')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
    ]
